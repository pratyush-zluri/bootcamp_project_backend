"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const transactionControllers_1 = require("../controllers/transactionControllers");
const parseCSV_1 = require("../controllers/parseCSV");
const multer_1 = __importDefault(require("multer"));
const transactionMiddlewares_1 = require("../middlewares/transactionMiddlewares");
const csvMiddleware_1 = require("../middlewares/csvMiddleware");
const router = express_1.default.Router();
const tc = new transactionControllers_1.transactionController();
const pc = new parseCSV_1.parseCSV();
const upload = (0, multer_1.default)({ dest: 'uploads/' });
const middleware = new transactionMiddlewares_1.middlewares();
router.get('/', tc.getTransactions);
router.get('/softDeleted', tc.getSoftDeletedTransactions);
router.post('/newData', middleware.newEntryValidator, tc.addTransaction);
router.put('/update/:id', middleware.idValidator, middleware.validateUpdate, middleware.checkNotSoftDeleted, tc.updateTransaction);
router.delete('/delete/:id', middleware.idValidator, middleware.checkNotSoftDeleted, tc.deleteTransaction);
router.post('/csv', upload.single('file'), middleware.validateUpload, csvMiddleware_1.validateCSVFile, csvMiddleware_1.validateCSVData, pc.parseCsv);
router.delete('/softDelete/:id', middleware.idValidator, tc.softDeleteTransaction);
router.put('/restore/:id', middleware.idValidator, tc.restoreTransaction);
router.get('/transactions/download', tc.downloadTransactionsCSV);
exports.default = router;
